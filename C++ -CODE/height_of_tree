#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

struct node {
    
    int data;
    struct node *left;
    struct node *right;
  
};

struct node* insert( struct node* root, int data ) {
		
	if(root == NULL) {
	
        struct node* node = (struct node*)malloc(sizeof(struct node));

        node->data = data;

        node->left = NULL;
        node->right = NULL;
        return node;
	  
	} else {
      
		struct node* cur;
		
		if(data <= root->data) {
            cur = insert(root->left, data);
            root->left = cur;
		} else {
            cur = insert(root->right, data);
            root->right = cur;
		}
	
		return root;
	}
}
/* you only have to complete the function given below.  
node is defined as  

struct node {
    
    int data;
    struct node *left;
    struct node *right;
  
};

*/
static int j=0,i=0;
int getHeight(struct node* root) {
   if(root!=NULL){
          printf("upaar i is => %d",i);
           printf("\n");
       if(j<i){
           j=i;
           printf(" j up is => %d",j);
           printf("  up root-data=>%d ",root->data);
            printf("\n");
       }
       if(root->left)
       i++;
       getHeight(root->left);
       if(i>0 &&root->right)
      i--;
        printf("mid  i is => %d",i);
        printf("\n");
       
        getHeight(root->right);
          if(root->right)
         i++;
          printf("dowm  i is => %d",i);
          printf(" down root-data=>%d ",root->data);
          printf("\n");
         if(j<i){
              j=i;
              printf(" dowm j is => %d",j);
           printf(" down root-data=>%d ",root->data);
            printf("\n");
          
       }
     
   }
   return j;
}

int main() {
  
    struct node* root = NULL;
    
    int t;
    int data;

    scanf("%d", &t);

    while(t-- > 0) {
        scanf("%d", &data);
        root = insert(root, data);
    }
  
	printf("height =>%d",getHeight(root));
    return 0;
}